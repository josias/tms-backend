# Generated by Django 3.2.4 on 2021-06-10 04:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Saisissez le modèle de la voiture', max_length=20, unique=True, verbose_name='modèle de la voiture')),
                ('firm', models.CharField(help_text='Saisissez le modèle de la voiture', max_length=20, verbose_name='marque')),
                ('power', models.FloatField(help_text='Saisisser la puissance de la voiture', verbose_name='puissance de la voiture')),
                ('cylinder', models.FloatField(help_text='Saisisser le nombre de cylindre', verbose_name='cylindre')),
                ('fuel_consumption', models.FloatField(help_text='Saisissez la consommation en litre de carburant', verbose_name='Consommation aux 100Km')),
                ('fuel_type', models.CharField(choices=[('DZ', 'Diesel'), ('ES', 'Essence')], default='ES', help_text='Choisissez le type de carburant', max_length=2, verbose_name='type de carburant')),
            ],
            options={
                'verbose_name': ('modèle de voiture',),
                'verbose_name_plural': 'modèles de voiture',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('policy_number', models.IntegerField(verbose_name="police d'assurance")),
                ('activation_date', models.DateField(verbose_name="date d'activation")),
                ('expiration_date', models.DateField(verbose_name="date d'expiration")),
                ('prime', models.FloatField(help_text='Saisisser le montant de la prime', verbose_name='prime')),
            ],
            options={
                'verbose_name': 'Assurance',
                'verbose_name_plural': 'Assurances',
                'ordering': ['-expiration_date'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_id', models.CharField(max_length=20, verbose_name='bon de commande')),
                ('category', models.CharField(choices=[('RE', 'Repair'), ('RO', 'Routine')], default='RO', max_length=2)),
                ('date_of_service', models.DateField(verbose_name='date')),
                ('next_date', models.DateField(verbose_name='prochaine date')),
                ('cost_of_service', models.FloatField(help_text='Saisir le coût', verbose_name='coût')),
                ('cost_of_lubes', models.FloatField(blank=True, help_text='Saisir le coût des lubrifiants', null=True, verbose_name='coût des lubrifiants')),
                ('cost_of_parts', models.FloatField(blank=True, help_text='Saisir le coût des pièces de rechanges', null=True, verbose_name='coût des pièces')),
            ],
            options={
                'verbose_name': 'Maintenance',
                'verbose_name_plural': 'Maintenances',
                'ordering': ['-next_date'],
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tax_amount', models.FloatField(max_length=20, verbose_name='montant de la tax')),
                ('date_of_tax_payment', models.DateField(verbose_name='date du paiement de la taxe')),
                ('next_due_date', models.DateField(verbose_name='date du prochain paiement de la taxe')),
            ],
            options={
                'verbose_name': 'Taxe sur véhicule',
                'verbose_name_plural': 'Taxes sur véhicule',
                'ordering': ['-date_of_tax_payment'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalCheckIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('check_in_number', models.CharField(max_length=20, verbose_name='Référence de la visite')),
                ('comment', models.TextField(verbose_name='commentaire')),
                ('date_of_checkIn', models.DateField(verbose_name='date de la visite')),
                ('date_of_next_checkIn', models.DateField(verbose_name='date de la prochaine visite')),
                ('cost_of_checkIn', models.FloatField(help_text='Saisisser le montant de la visite technique', verbose_name='montant')),
            ],
            options={
                'verbose_name': 'Visite Technique',
                'verbose_name_plural': 'Visites Techniques',
                'ordering': ['-date_of_checkIn'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('carmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fleet.carmodel')),
                ('registration_number', models.CharField(help_text="Saisisser l'immatriculation de la voiture", max_length=10, unique=True, verbose_name='immatriculation')),
                ('chassis', models.CharField(help_text='Saisisser le numéro de chassis', max_length=50, verbose_name='numero de chassis')),
            ],
            options={
                'verbose_name': 'voiture',
                'verbose_name_plural': 'flotte',
                'ordering': ['registration_number'],
            },
            bases=('fleet.carmodel',),
        ),
    ]
